Spam Mitigation - The Challeng of Private and Permissionless

So, what I'm going to be talking, today, is about mitigating spam, and otherwise known as blockchain control. And from a perspective of a lot of different blockchains, including Monero, well of course Monero but also some of the so-called the open blockchains. [messes with slides for a minute]
So when we look at spam mitigation, it's easier to somewhat start with what is the most common problem, which is email. And email is an example of something that is effectively permissionless but not private. And so how do we filter spam in email? Well what we do is we censor. We censor and we rely on the reputation of the sender. So we, for example, run things through a spam filter. We also look at the history of a particular server. Are they sending spam? Or a type of server for example a compromised home system, we block them. So we asked some more interesting questions. What will email look like if it was sent, you took out all the critical information such as sender, receiver, header information, and that all that's encrypted, and you encrypt the email itself, and then you send it over Tor. How do you block spam in email? And the answer of course is it's very very difficult to do with the current situation, you can't tell the spam, the bad, from the ham, the good by inspecting the cyber text. Or determine the reputation of an anonymous sender or provider. So that is the fundamental challenge, in an open environment you can actually censor and rely on reputation. In a[n] encrypted environment, even with less than perfect privacy, that becomes increasingly difficult. 

So there are a lot of different approaches. So Bitcoin and Bitcoin-like coins, and I'm talking things like Litecoin, Bitcoin Cash, Bitcoin SV, Dash, Zcash, and Dogecoin etcetera, they rely on a fixed block weight, size, with in some cases minimum relay fees. Now by minimum relay fees what I'm talking about is a minimum fee that has to be paid, in the clear, which is seen by everybody for a node to be prepared to relay the transaction. [In] Monero and Monero-like coins, the fixed block size is effectively replaced by an adaptive block size, with, in some cases, the same sort of minimum relay fees, and more recently in Monero a dual median. The Monero approach requires a minimum block reward, a tail emission, for the approach to work. The other thing to bare in mind is that while some things are interchangable, a lot of things are not, so one can't easily just transfer stuff from Bitcoin over to Monero, or even vise versa. That can be a problem. When we're dealing with, ways of dealing with this spam. Okay.

Bitcoin, this is the first introduction of the one megabyte block weight size in two thousand ten. Now in two thousand ten the presumption was that the anonymity level in Bitcoin was good enough. We know that's not the case today, but at the time there was that presumption.  And Bitcoin, even to this day, has no minimum node relay fee. Interestingly enough, in the early days of Bitcoin, spam attacks were not a problem, when the network was not overloaded, even in two thousand thirteen. Spam attacks have become a problem when the nodes are close to full, when the blocks are close to full. And that is because a spam attack in Bitcoin can be profitable if you control a very small percentage of the hash rate, and therefore you can actually profit from spamming Bitcoin even though the fees are very high. So that's the grand daddy. Then we have Bitcoin Cash and Bitcoin SV. Now they went the big block approach, and in Bitcoin Cash you have the thirty two megabyte blockweight, Bitcoin SV we're talking one twenty eight, and that has a minimum, both have a minimum Satoshi in their respective levels fee provided for node relay. And, a most interesting example is Bitcoin SV because in many ways it's the closest to Monero with respect to potential block sizes, but again the cost to spam a block is roughly about one point three BSV per ten minute block. And again I'm not aware of spam attacks on these empty chains. One of the elements that I find interesting is, what is the motive for the spam, and I'm going to come back to this point because it's a critical issue in spam attacks is, do you have a motive, and if there isn't a clear motive then the risk is immediately lowered. 

Okay, Litecoin, again, small blocks, Dash, a small block example, and Zcash, this is the private one, or at least a portion of which is private, also, no minimum block weight size. What's interesting about Dash and Zcash is they haven't put up a node relay fee, Litecoin has. And again haven't been directly attacked. Now when I'm talking about these clear blockchains, and I'll refer to as private, it's important to realise that you can attack them in other ways like for example real time blockchain analytics and then use that to try to mitigate spam, but you have to do it in real time. You do have access to the transaction amount but I haven't included, I'm assuming the 
[7:02 unintelligible to me, maybe class z or class c?]
 private nature of it because of the type of measures in place, maybe limiting the blocksize and setting a costing fee, a minimum costing fee. Those are equally applicable to a coin like Monero. So in that respect, but we're not relying on, say, for example, prioritizing higher transactions, which at one point was done in Bitcoin, as an example. 

So this brings us to our next slide. Okay, and you have Monero and Monero-like coins so I'm going to cover the two that are interesting. So Monero basically went from the first iteration of spam mitigation which is just a cryptonote penalty function, and that was started in two thousand fourteen. And then Monero introduced minimum node relay fees in two thousand fourteen in response to a motivated spam attack. Now for those of you newer to Monero, what occurred there was a vulnerability was found, and the attacker had to bloat the blocksize to a certain size in order to trigger the vulnerability. And that required basically a certain amount of bloat, and that was the nature of the attack in two thousand and fourteen. The response from the community was to introduce the minimum fee for node relay, which is enforced by the node, simply says, well we have this fee, if your transaction doesn't pay the fee, we won't relay the transaction. And then the most recent innovation has been the dual median approach which was incorporated in two thousand nineteen to provide further protections and I'll come back to that later in the talk. 

Bytecoin is interesting for one reason, they also had the cryptonote adaptive block size like Monero, but they recently changed to miner voting for block size, and I suspect the reason, the necessity of this change is due to the fast falling block reward, with no minimum block reward, now getting closer to Bitcoin than Monero, so the fundamental issue again is no minimum fee for node relay, but again in Bytecoin they had to change away from cryptonote to a miner voting because their block reward was going very very low. So it comes down to the fact that it's a necessity of a minimum block reward in order to have the type of spam mitigation that we have in Monero today. Some of the other adaptive block size sites, they've done the same thing, some have node relay fees, typically inherited from Monero, some may add dual and short term medians, mostly the case of coins that are basically following Monero in this approach.

So, we look at what is the tool in Monero for spam mitigation, and this is something that is 
[10:11 unintelligible few words] the primary tool comes the straight cryptonote penalty function. And the characteristics are very interesting, but essentially what we're saying is there's a penalty if you increase the block over a certain size. And what you have is you have a maximum allowed transaction block weight which has been set, that's a limit in how far you can scale, and then you take the median over a hundred blocks, of all the blocks, and that allows you to then move to the next, to your next base block size. So you have to grab at least 50 blocks of that size and then move to that size, and that's the basic rule, and the rule is the penalty paid by the miner. And the key element of this that needs to be understood is that the penalty for an additional transaction has to be compensated from the fees the transaction pays. That is how fees are set in Monero. So if you've got a miner transaction, you need to pay, you're going to attract a penalty by adding that transaction, or more correctly an additional penalty, then you have to have enough fees in the transaction to justify mining that transaction, and that's the rational miner argument.

Next slide here, there we go. So basically what one can do is one can look at the, write the penalty in a simplified manner. And essentially we take the percentage increase in the blocksize, which is B, and then we write the penalty, strictly speaking, as the penalty that's attracted, it's the block reward, which is our basic block reward, times the percentage blocksize increase squared. That is essentially, we re-write the cryptonote penalty formula in terms of this ratio, B, which is essentially if you have a three hundred thousand byte block, you added, say, thirty thousand bytes, the ratio for B would be point one. If you're adding three thousand it's point oh one. So that gives you the amount of penalty you're going to pay when you do that. And the more interesting thing is we look at the first derivative of the penalty with respect to B. So we look at the incremental penalty that is going to be paid when you add a transaction and this is a critical transaction parameter. So essentially what happens is we have a transaction T, with size Mt, and then we look at, and we're already in the penalty regime, and then we look at what the additional penalty will be to add that transaction, so you're a rational miner, and you want to add one transaction. And that transaction has a fee, and has a penalty, and if you optimize your mining algorithm, what you do is you order your transactions, roughly in order, for example, fee paying per-byte, it's not strictly the optimal but it's close to it. And then you come up with, this is how much penalty I attract, this is how much fees I get the minute I'm in the negative in the incremental transaction, then I stop adding transactions to the block and I release my mined block. And there's two cases here, and if you then expand the equation, basically it's a quadratic equation, you have 2BBt, which is the case where, and you have B squared too. When B is zero, which you write at the penalty, the only term is B squared, and that is the term that is used to determine the normal fee. And then 2BBt is the term that you use in order to determine an incremental fee that a miner would pay. And so this is basically your fee per byte, so this is how fees are determined in Monero, because the entire, all the transactions are basically competing againsta a penalty, so you hav a fee market, but the fee market is amongst transactions themselves in a block, but also you're collectively competing against this penalty in order to get your transactions in. 

So in this example we're going to set the reference transaction, which is basically how we set the normal fee. You take three thousand bytes, which is kind of a bit of a typical transaction 
[I can't understand this part at 15:03, about 5 words or so which sound like 'which is a safety mod chain' but I know that's not right, please help]
You then look at the minimum block size which is three hundred thousand bytes, you consider a two input, two output transaction, add a small margin, normal fee per byte then becomes essentially, the formula is R based as Br over Mn, and Br is Mn over, it's the size of the transaction plus over
[at 15:27 after the word over, I can't understand what he's saying here for a few words]
which is point oh one. And this is to ensure that a typical transaction will pay a fee that is large enough to scale the blockweight. And so you avoid a situation where everybody's trying to, they don't take the default fee, if they take the normal fee, then it's at least enough to create scaling in the block. And then we designed the two other fees that are set based on this, the normal fees is two timex x, sorry the low fee, and then there's a high fee that's five times that.
[for clarification, the slide says "Low fee set at 0.2x normal fee and high fee is set at 5x normal fee"]
Those ratios are basically arbitrary, in the sense that we can change those, in particular if you want to increase the low fee, one can do that. You just have to be careful that we don't increase it too much, then you kind of negate the fee market for the penalty itself. But one definitely can look at those two fees, particularly the low fee if one is concerned with increasing fees in a simplistic way. 

So, the next slide. Now the high fee, the highest fee, this is based on maxxing the penalty out. And this is critical because this is the fee that an attacker, say doing a big bang attack, would choose. And this fee is basically set by the penalty and the block reward, that's it. What we're assuming there we take the derivative, we calculate a transaction right at the maximum penalty point, and then what we do is we assume that that person who wants to max out the penalty, that's the fee they attract. And essentially we get our fee caught in fee structure, the low fee is basically point zero zero two block reward divided by Mn, which is the median size of the, the median block size. We're still dealing with a single median situation, and then you have your normal, your high, and your highest. Now a critical point, if one is looking, and this was discussed in Mitchell's talk, for example, if you're looking at creating a fee structure that doesn't provide information, you focus on you know the factor of two or whatever the factors that you want to do, and you take out the R based over Mn. So you factor out the block reward because that is essentially the same for everybody. And then you factor out the median block size because again that's the same for anybody, and then you digitize or you create a discrete fee what was left. And that way you acheive the goal of creating the additional anonymity, but at the same time you actually have fees that are in sync with the reality of the cryptonote penalty. So this is an important subtle point when looking at fees. And recall, you know if you look at the slanting graphs that were presented before, that's exactly what that is, the falling fees are showing the dropping block reward. And that's what we see different. So what happens with time is because of how the block reward is factored in, you see this falling graph in the ones, and in fact the ones that stand out are the ones that don't follow the protocol, because they just set a standard fee, and then you see it flat. So that's a real takeaway, but that's the design, how you would actually factor in a fee, you're factoring it at this point. 

So, they are arbitrary based on the normal fee. Minimum node relay fee is equal to the low fee, this can be changed. In two thousand nineteen we did something else. We introduced long term median. Now the long term median is designed over a hundred thousand blocks. And the principal behind this is very straight forward. What the fee structure in Monero is designed to do was to address the long term growth in the Monero blockchain by having fees that follow the reality of the blockchain. It is not intended to be a way, when you're dealing with a burst situation. So with the long term median we're separating out the long term growth of Monero, which maintains it's scalability and prevents kind of the attacks that occur in Bitcoin. And at the same time what we're doing is we're creating a mechanism to allow for a short burst in transactions, for example, the classic example, and there's a lot of data from Visa on this actually, the growth just before December 25th, you see this massive increase in transaction levels, and then on Christmas day it plunges to virtually zero. So you have this ramp up and then a sudden drop. And this fifty, median number was calculated based on the Visa figures, plus a significant margin to allow for growth in the network in the short term, etcetera. But that's essentially the concept. Now here's the tricky part. Because many people ask the question when this occurs, what happens if we just use a simple double median, and we take the same blocks. Well the problem with that is if you actually do that you end up using, your compounding rate of the long term median becomes equal to your bust. So you don't want the fifty x as your compounding rate for the long term median, you want something a lot smaller like one point four x, sort of comparable to the 2x in the short term median. And the way we have to do that is you take out the portion of a block that are included in the long term median that exist, exceed the existing long term median by a factor of one point four. So you do not take the whole block in the long term median but only that portion up to one point four x the existing median. And that allows you to control the growth of the long term median to a reasonable level which is independent of the fifty x that you would need to address transactions in the short term. 

The second move that was made, and this is a critical move, is that we calculate the fees based upon the long term median and not the short term median. This change has a fundamental implication in defending against big bang, as I'll show you in my next slide. So again that's a key distinction that was made that has an impact on spam. Okay, so, block weight change is limited to fifty times, again if you have to maintain the attack, maintenance costs of a bloated blockweight to a spammer is fifty x. The maintenance costs is the equivelant to attacking, say something like Bitcoin SV. And those are what I was referring to in the previous slide. 

So, here's an example. Before we did the changes, the maintenance per five blocks in Monero would have been point zero two five monero. After the changes the maintenance at fifteen megabytes is one point two five monero. And that was a key distinction, this is by far the most powerful anti spam deterrent. By comparison, Bitcoin SV, which is trying to defend a hundred twenty eight megabyte blocks, has a point seven five BSV on their maintenance costs to just attack, and of course this is zero to get it there. In the case of Monero you have to ramp it up. And if you don't maintain your maintenance as an attacker, then you also have to pay the ramp up fee again. So you can't turn it on and off. 
So I just put some market values, that's sort of a comparison, that's the key factor that occurs. The second one of course is that we're limiting, effectively, in the short term the attack to fifteen megabytes. You can go up to thirty but then you have to pay the maximum fee on spamming Monero. 

Now, in this example, why don't you do back to the previous slide for a second. There's a bunch of different issues, is that, in the existing big bang attack there wasn't a clear motive other than spam. Now one of the key elements of this particular attack is that the minute you include deanonymization into the attack you give the attack a power. Because now there is an incentive to spam, and it's deanonymization. If you want to, say, combine it with some of the questions that was discussed in the previous two talks, one gets the idea that as an addon, a big bang attack becomes a threat, much more than it was before because now you have an incentive. In realistic there are a lot of different things but I think targeting the privacy side is probably the strongest option. Both on the fee structure in the sense that we can refine that. Some other recommendations were made. Definitely looking at increasing the ring size, especially if we have a drop in fees.

So, spam bloating attacks with a clear motive are far more dangerous than those without a clear motive, and this is a thing that's very important I want to keep in mind. When you look at the experience, the attack on Monero was driven by a need to create a, exploit a vulnerability. You need to get the block size to a certain size to do that. In Bitcoin we are seeing attacks now even though fees are very high, again, the reason is there's money to be made. So we have to look at the mode. Increasing the mixin and possibly increasing minimum relay fee, I think, are reasonable mitigation aspects, especially if we get efficiencies in ring signatures, as has been discussed.

Okay, so questions or discission.

You mentioned briefly the attack on anonymity, it's kind of been discussed in the last couple of months, of bloating ring sizes with outputs that you own. Do you think that if changing the fee structure to be more prohibitive to bloating block sizes with your own outputs is the way to solve this or should we be doing something else?

Again, this is an example of a targeted attack, and the example with a targeted attack is privacy. So what I would look at is, in that particular attack, would be increasing the ring size, because that immediately increases the cost to the attacker. If you, for example, have, let's say twice as much as what we have, twenty fake outputs instead of ten, well it's going to take twice as much spam to acheive the same level of deanonymization. And it's a relatively, comparitively cheap solution, if for example we look at a lot of the other research that's coming out in the pipeline with respect to efficiencies and ring signatures. So, to me that's the easy way to defend Monero right now, mainly because of, you also address other issues. It's also I think a compounding attack, I don't standalone it is as effective. But when combined with some of the other things that have been mentioned, then it's potentially more dangerous. So again if you address some of these other issues, such as the fee recommendations, to eliminate a fee of it's own essentially is what we want to get rid of. Then, again, we can tone that down that way.
The one fee you can look at, somewhat, if you want to increase it, is the lowest fee. That is doable. I mean, you can even take it out entirely, and just set the minimum fee just slightly below the normal fee. That's a possibility, you're going to get about a five times gain just out of that on the maintenance. But I would say the real answer lies in addressing the motive, and the motive is attacking the privacy side of the coin, in that particular case .










